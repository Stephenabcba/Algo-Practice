# leetcode problem # 389. Find the Difference

"""
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:
Input: s = "", t = "y"
Output: "y"

Constraints:
0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.
"""

"""
My solution: Keep count with dictionary

Observation: The order of letters in s and t are irrelevant
- The main difference between s and t is the added letter, and where that letter is placed
in t do not change the answer

Part 1: Use a dictionary to keep count of each letter in s:
- each key in the dictionary is a letter that exists in s
- the corresponding value to the key is the number of times the letter occurred in s
Part 2: Decrement counts in the dictionary
- iterate through each letter in t
    - decrement the count corresponding to the letter by 1
    - if the count is 0 before decrementing, the added letter is found
        -> return the letter

Runtime: O(N) where N is the length of s
Space: O(k), where k is the available character set used in s and t
    - k is a constant of 26 in this problem, so it could be simplified to O(1)
"""

class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        letterDict = defaultdict(int)

        for letter in s:
            letterDict[letter] += 1

        for letter in t:
            if letterDict[letter] > 0:
                letterDict[letter] -= 1
            else:
                return letter